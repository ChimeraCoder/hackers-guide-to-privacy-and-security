A Hacker's Guide to Privacy and Security
hackNY Hackathon: Columbia University
5 Apr 2014

Aditya Mukerjee

http://www.adityamukerjee.net
@chimeracoder

* 
.image 88x31.png

* Personal Background

- Cofounder & CTO of [[https://www.boardrounds.com/][BoardRounds]]
- Master's student in computer science at [[http://tech.cornell.edu][Cornell NYC Tech]]
- Studied computer science and statistics at Columbia
- Worked on the server team at foursquare (Explore recommendation engine)
- Previously on the OkCupid data team (conducted research for [[http://blog.okcupid.com/index.php/the-real-stuff-white-people-like/][OkTrends]] reports)
- Formerly the Hacker-in-Residence at Quotidian Ventures
- hackNY fellow 2011
- Personal interest in cryptography

* What is cryptography (and why do we care)?

* Cryptography is romantic

* Alice and Bob
- The biggest "will-they-or-won't-they?" couple in mathematical history
.image 3913656401_d9787738ea.jpg


* Cryptography is useful

* How do you flip a coin over the phone?
- How can you trust the person on the other line?
.image https://farm4.staticflickr.com/3812/9464528090_ace5f129cf_n.jpg

* Flipping a coin over the phone
- Develop a *commitment*scheme*
- The commitment scheme must reveal zero (additional) knowledge about the coin flip
- [[http://varnull.adityamukerjee.net/post/70200478932/flipping-a-coin-over-the-phone][This also works over email]]

* Zero-knowledge proofs
- "NP" problems: Easy to *verify* a correct answer, but not necessarily to *find* a correct answer.
- Alice wants to prove that she knows the answer, but without revealing it
- How can she convince Bob that she knows the answer?
- Example: airline data
- Example: patient data


* Multi-party auction
- Five people are conducting an auction online
- None of them trust each other
- How do you know that someone won't change his bid at the last minute?
- How do you know the payer will pay the money?
- How do you know the seller won't take the money and run?


* Cryptography is relevant

.image edward-snowden.jpg


* Getting started 

* Some basic facts
- Cryptography relies on *discrete*mathematics*
- Any message can be expressed using an alphabet
- Any alphabet can be mapped to a two-character (*binary*) alphabet

- Any two charactres (*bits*) can be *XOR* -ed together to create a different bit

- A *one-way-function* is easy to compute, but hard to invert.

- *Negligible*probability*: functions such as 2^{-x}
- *Probabilistic*polynomial*time*: what does this mean?


* The bad news
- We have a provable upper bound on security
- A one-time pad consists of random characters that are XORed with the message
- A one-time pad provides "perfect" security.
- So why don't we all just use one-time pads?



* The worse news
- 50% is a very narrow target
- The *Majority*principle* allows an attacker to amplify even small weaknesses.



* It all starts with steganography
- Keep it hidden!
.image 4850496398_966002a6d0_n.jpg
- Mary, Queen of Scots relied on steganography in prison

* But don't hide everything
- Kerckhoffs's principle
- _A_cryptosystem_should_be_secure_even_if_everything_about_the_system,_except_the_key,_is_public_knowledge_ 
- The opposite is "security by obscurity".



* Symmetric key encryption

* Geheimschreiber
- The successor to the engima machine
- Alan Turing was known for his work on cracking the enigma (among more)
- Without the ability to decipher the enigma, the Allies may have lost World War II
- Messages all begin with "UMUM 4 VEVE" and end with "HH"
- This is a *known-plaintext*attack*
.image 10967531395_0bdb985518_n.jpg
- [[https://chimeracoder.github.io/geheimschreiber/]]



* Asymmetric key encryption
- Also known as *public*-*key*cryptography*.
- Advantage: Does *not* require secure exchange of private keys!
- Disadvantage: Keys need to be *authenticated*
- Disadvantage: Expensive
- Disadvantage: Theoretically complex
- Disadvantage: Reliance on prime numbers

.image Public-key-crypto-1.svg


* RSA

- In the discrete realm, exponentiation is easy, logarithms are hard.
- Exponentiation is essentially a one-way-function
- Finding at least two factors of a number can be either easy or tough
- Finding the factors of the product of two primes is *really* tough

* Online encryption options

- Do nothing
- Trusted third party (SSL/TLS)
- End-to-end (PGP/GPG, OTR)

* SSL/TLS
- This is the underpinning of "https"
- Users encrypt content before sending it using the website's public key (certificate)
- Websites decrypt it using the corresponding private key
- How do you know that you are using the correct public key for encryption?

* Certificate Authorities
- Certificates are validated by trusted third parties
- But who will watch the watchdogs?
- *Certificate*pinning* can prevent [[http://varnull.adityamukerjee.net/post/73134171911/bypassing-a-dns-man-in-the-middle-attack-against-google][man-in-the-middle attacks]].
.image tumblr_inline_mzb6lowvFy1qh11x4.png

* DNS Resolution

- Trivial to hijack all traffic on port 53.
- DNSSEC is a common, [[https://news.ycombinator.com/item?id=5571937][but flawed]], attempt.
- [[https://en.wikipedia.org/wiki/DNSCurve][DNSCurve]] is likely a better approach


* Email 
- Email is inherently insecure by design.
- Think of email as a *postcard*.
- ...except worse, because snail mail enjoys additional legal protections

* "Metadata"
- So-called "metadata" can be incredibly revealing
- [[http://kieranhealy.org/blog/archives/2013/06/09/using-metadata-to-find-paul-revere/][Using metadata to find Paul Revere]]
- Example: Nomi
- Example: Patient data


* PGP: Pretty Good Privacy
- So strong it must be illegal!
- Zimmerman was investigated for "munitions export without a license"
- First & Second amendments
- RSA/ElGamal
- Thunderbird + Enigmail, Mail + GPGTools (OS X)

* Zimmerman today: Silent Circle and Dark Mail
- Silent Circle: P2P encrypted texts, phone calls.
- Silent Circle deleted all emails spontaneously in August.
- Currently working on *Dark*Mail*Technical*Alliance* with Lavabit

* OTR: (Off the record)
- This is *not* the same as the "off the record" feature in Google Hangouts!
- Functions like PGP 
- Pidgin (Windows/Linux), Adium (OS X)

* Tor
- Provides "onion" protection
- Viking ship analogy
- Does not conceal connection itself (as demonstrated in Harvard bomb scare incident)

.image tor-logo.png

* Backdooring cryptography
- A large portion of cryptographic advances are NSA-funded
- Speculation that certain cryptographic schemes are "backdoored"
- What does it mean to be backdoored?


* Randomness 

* What is randomness?
.image 14_is_not_a_random_number_tshirts-r76e7ff5208e34707a888dc7ef67eabd2_va6l9_512.jpg

* How do we generate random numbers?
- Randomness is impossible - we used *pseudorandom* number generators instead
- What is psuedorandomness?
- Pesudorandom numbers are numbers which are indistinguishable from random numbers.

* ...yeah...

* Attacks on randomness
- Older versions of SSL are insecure because the entropy used is not random enough
- Remember what the majority principle implies for a PPT attacker!

* Alternative approaches
.image random_number.png
[[https://xkcd.com/221/]]


* Best Practices for Security
- Don't write your own crypto
- *Don't*write*your*own*crypto*.


* More Best Practices for Security
- Encrypt your filesystem *and* your swap partition
- User credentials should exist only in memory
- Use bcrypt (or scrypt) for user credentials
- Use iptables (or ufw) to limit possible attack vectors
- Be *very* careful when using VPS providers.
- If using Amazon, place application in a VPC and database in a private subnet

* The future of crypto

* Quantum cryptography
- Quantum key distribution
- Break prime-number crypto using quantum computers

* Future cryptographic societies
- Already critical in national security and diplomacy.
- Economic uses -> cryptocurrencies?

* Key takeaways

- Crypto is *hard* (don't reinvent it!)
- Crypto is *easy* (don't overthink it!)
- Crypto is *fun* (do think about it!)
- Crypto is *critically*important* (do use it!)


* Further resources

- [[http://www.amazon.com/The-Code-Book-Science-Cryptography/dp/0385495323/ref=sr_1_1?ie=UTF8&qid=1392184056&sr=8-1&keywords=the+code+book+simon+singh][The Code Book]] by Simon Singh
- COMS W4261: Introduction to Cryptography
- [[http://www.matasano.com/articles/crypto-challenges/][Matasano Crypto Challenges]]



